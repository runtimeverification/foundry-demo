set -euxo pipefail
export PATH=$(pwd)/.build/usr/bin:$PATH
export PATH=$(pwd)/../hs-backend-booster/.build/kore/bin:$PATH

poetry_run() {
    poetry -C ./kevm-pyk -- run "$@"
}

# you made changes to KEVM and want to restart
forge_build() {
    rm -rf ${foundry_out}
    (   cd $(dirname ${foundry_out})
        forge build
    )
}

kompile_foundry() {
    kevm kompile --backend foundry             \
        .build/usr/lib/kevm/include/kframework/foundry.md \
        --main-module FOUNDRY                             \
        --syntax-module FOUNDRY                           \
        --pyk --verbose --profile
}

foundry_kompile() {
    kevm foundry-kompile ${verbose} ${foundry_out} "$@"
}

foundry_prove() {
    kevm foundry-prove ${verbose} ${foundry_out} ${break_on_calls} --test ${test} "$@"
}

foundry_show() {
    kevm foundry-show ${verbose} ${foundry_out} ${test} "$@"
}

foundry_to_dot() {
    kevm foundry-to-dot ${verbose} ${foundry_out} ${test} "$@"
}

foundry_view() {
    kevm foundry-view-kcfg ${verbose} ${foundry_out} ${test} "$@"
}

foundry_list() {
    kevm foundry-list ${verbose} ${foundry_out}
}

foundry_remove_node() {
    node_id="$1" ; shift
    kevm foundry-remove-node ${verbose} ${foundry_out} ${test} ${node_id} "$@"
}

foundry_simplify_node() {
    node_id="$1" ; shift
    kevm foundry-simplify-node ${verbose} ${foundry_out} ${test} ${node_id} "$@"
}

foundry_step_node() {
    node_id="$1" ; shift
    kevm foundry-step-node ${verbose} ${foundry_out} ${test} ${node_id} "$@"
}

foundry_section_edge() {
    edge_id="$1" ; shift
    kevm foundry-section-edge ${verbose} ${foundry_out} ${test} ${edge_id} "$@"
}

do_kompile() {
    kevm kompile --pyk --backend haskell ${verification_file} --definition ${definition} \
        --main-module VERIFICATION --syntax-module VERIFICATION
}

do_prove() {
    kevm prove ${spec_file} --definition ${definition} --pyk ${verbose} --save-directory ${kcfgs_dir}
}

do_view() {
    kevm view-kcfg ${verbose} ${kcfgs_dir} ${spec_file} --definition ${definition}
}

foundry_out=out

#test=Examples.test_assert_bool_failing
#test=Examples.test_assert_bool_passing
#test=Examples.test_wmul_increasing_overflow
#test=Examples.test_wmul_increasing
#test=Examples.test_wmul_increasing_positive
#test=Examples.test_wmul_weakly_increasing_positive
#test=Examples.test_wmul_increasing_ge_one
#test=Examples.test_wmul_wdiv_inverse_underflow
#test=Examples.test_wmul_wdiv_inverse
test=ERC20Test.testZeroTransferPossible

verbose=
verbose=--verbose

break_on_calls=
break_on_calls=--no-break-on-calls

# Uncomment these lines as needed
# pkill kore-rpc || true
# make build-foundry -j2
forge_build
foundry_kompile --rekompile --regen
# foundry_list
foundry_prove
# foundry_remove_node 4b6c47..d6d6d3
# foundry_section_edge --sections 4 d38e0e..ee4ec8,593be8..e93e52
# foundry_show # --no-minimize --node 35880c..e4389e --node 17e757..6c2e55
foundry_view

# test=AssertTest.test_sum_10
# date
# foundry_prove --no-break-on-calls --reinit
# date
# foundry_prove --no-break-on-calls --reinit --use-booster
# date
# 
# test=AssertTest.test_sum_100
# date
# foundry_prove --no-break-on-calls --reinit
# date
# foundry_prove --no-break-on-calls --reinit --use-booster
# date
# 
# test=AssertTest.test_sum_1000
# date
# foundry_prove --no-break-on-calls --reinit
# date
# foundry_prove --no-break-on-calls --reinit --use-booster
# date


definition=tests/specs/benchmarks/verification/haskell
verification_file=tests/specs/benchmarks/verification.k
spec_file=tests/specs/benchmarks/address00-spec.k
kcfgs_dir=kcfgs

# rm -rf ${kcfgs_dir}
# poetry update -C ./kevm-pyk
# make build-kevm
# do_kompile
# do_prove
# do_view
